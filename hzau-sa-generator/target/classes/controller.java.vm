package ${package.Controller};

import java.util.Arrays;
import java.util.List;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import pub.ddu.boot.core.annotation.SysLog;
import pub.ddu.boot.framework.controller.BaseController;
import pub.ddu.boot.core.enums.LogType;
import pub.ddu.boot.core.exception.DduException;
import pub.ddu.boot.core.utils.R;
import ${package.Entity}.${entity}VO;
import ${package.Service}.${table.serviceName};

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiImplicitParam;


/**
 * $!{table.comment} 控制器
 * @author ${author}
 * @date ${date}
 */
@RestController
@RequestMapping("sys/${table.entityPath}")
@Api(value = "$!{table.comment}-API", tags = { "$!{table.comment}相关接口" })
public class ${table.controllerName} extends BaseController {

    @Autowired
    private ${entity}Service ${table.entityPath}Service;

    /**
     * $!{table.comment}分页列表
     */
    @ApiOperation("分页查询$!{table.comment}")
    @ApiImplicitParam(name = "${table.entityPath}", value = "$!{table.comment}实体", paramType = "query", dataType = "${entity}VO")
    @GetMapping("/page")
    public R page(${entity}VO ${table.entityPath}) {
        Page<${entity}VO> page = getPage();
        QueryWrapper<${entity}VO> queryWrapper = new QueryWrapper<${entity}VO>(${table.entityPath});
        IPage<${entity}VO> pageInfo = ${table.entityPath}Service.page(page, queryWrapper);
        return R.ok().put("total", pageInfo.getTotal()).put("rows", pageInfo.getRecords());
    }

    //TODO.....
}